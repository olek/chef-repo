map ,t :w<cr>
map ,- :nohl<cr>

" maximize horizontal splits vertically from now on
nmap <leader>vm :set noequalalways winheight=9999 helpheight=9999<cr>:let netrw_winsize = 9999<cr>
" return normal behavior of horizontal splits being of equal height
nmap <leader>vn :set equalalways winheight=1 helpheight=20<cr>:unlet netrw_winsize<cr><C-W>=

" UnMap the arrow keys to be based on physical lines as usual, not display lines 
unmap <Down>
unmap <Up>

au BufNew,BufRead Cheffile setf ruby

" 20 previous commands in history is not enough
set history=10000

" vim-turbux configuration, get it by cloning 2 following repos into ~/.janus folder
" https://github.com/jgdavey/tslime.vim
" https://github.com/olek/vim-turbux
let g:turbux_rspec  = 'spec'        " default is 'rspec'
nmap <leader><C-t> <Plug>SetTmuxVars

nnoremap <Leader>zz :let &scrolloff=999-&scrolloff<CR>

" resizing fonts on the fly
let s:pattern = '^\(.* \)\([1-9][0-9]*\)$'
let s:minfontsize = 6
let s:maxfontsize = 16
function! AdjustFontSize(amount)
  if has("gui_gtk2") && has("gui_running")
    let fontname = substitute(&guifont, s:pattern, '\1', '')
    let cursize = substitute(&guifont, s:pattern, '\2', '')
    let newsize = cursize + a:amount
    if (newsize >= s:minfontsize) && (newsize <= s:maxfontsize)
      let newfont = fontname . newsize
      let &guifont = newfont
    endif
  else
    echoerr "You need to run the GTK2 version of Vim to use this function."
  endif
endfunction

function! LargerFont()
  call AdjustFontSize(1)
endfunction
command! LargerFont call LargerFont()

function! SmallerFont()
  call AdjustFontSize(-1)
endfunction
command! SmallerFont call SmallerFont()

" Unbind the cursor keys in insert, normal and visual modes.
for prefix in ['i', 'n', 'v']
  for key in ['<Up>', '<Down>', '<Left>', '<Right>']
    exe prefix . "noremap " . key . " <Nop>"
  endfor
endfor
